<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.music.mapper.MemberMapper">
	<resultMap type="com.music.domain.MemberVO" id="memberTableMap">
		<id property="id" column="id"/>
		<result property="id" column="id"/>
		<result property="pw" column="pw"/>
		<result property="nickname" column="nickname"/>
		<result property="name" column="name"/>
		<result property="active" column="active"/>
		<result property="phone" column="phone"/>
		<result property="email" column="email"/>
		<result property="zipnum" column="zipnum"/>
		<result property="address1" column="address1"/>
		<result property="address2" column="address2"/>
		<result property="regdate" column="regdate" javaType="java.util.Date"/>
		<collection property="authList" resultMap="authMap"/>
	</resultMap>
	<resultMap type="com.music.domain.Member_authVO" id="authMap">
		<result property="id" column="id"/>
		<result property="auth" column="auth"/>
	</resultMap>
	
	<insert id="registMember">
		insert into member_m (id,pw,nickname,name,phone,email,address1,address2)
		values (#{id},#{pw},'임시',#{name},'임시','임시','임시','임시')
	</insert>
	<insert id="registMemberAuth">
		insert into member_auth_m (id, auth)
		values (#{id},'ROLE_USER')
	</insert>
	
	<select id="viewMember" resultMap="memberTableMap">
		select m.id as id, pw, name, zipnum, nickname, active, phone, email, address1, address2, regdate, auth 
		from member_m m LEFT OUTER JOIN member_auth_m auth
		ON m.id = auth.id
		where m.id= #{id}
	</select>
	
	<select id="viewMemberList" resultMap="memberTableMap">
		select m.id as id, pw, name, zipnum, nickname, active, phone, active, email, address1, address2, regdate, auth 
		from member_m m LEFT OUTER JOIN member_auth_m auth
		ON m.id = auth.id
	</select>
	
	<select id="viewMemberListWithPaging">
		<![CDATA[
			select * from (
				select m.id as id, pw, name, zipnum, nickname, phone, active, email, address1,
						 address2, regdate, auth, rownum rn  
				from member_m m LEFT OUTER JOIN member_auth_m auth
				ON m.id = auth.id where 
				
					rownum <= #{amount} * #{pageNum}  order by regdate desc
				) 
			where rn > #{amount} * (#{pageNum}-1)
		]]>
	</select>

	<select id="checkMemberWithId" resultType="int">
		select count(*) from member_m where id = #{id}
	</select>
	
	<update id="updateMember">
		update member_m set name=#{name}, address1=#{address1}, address2=#{address2}, zipnum=#{zipnum}, active=#{active} where id=#{id}
	</update>
</mapper>