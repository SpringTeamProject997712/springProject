<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.music.mapper.CreatePlaylistMapper">
	<select id="viewTrackList" resultType="com.music.domain.TrackVO">
		select * from track_m
	</select>
	
	<select id="viewTrackList5" resultType="com.music.domain.TrackVO">
		<![CDATA[
			select * from track_m where rownum <= 5
		]]>
	</select>
	
	<select id="selectJustOnePlaylist" resultType="com.music.domain.PlaylistVO">
		select * from playlist_m where plbno = #{plbno}
	</select>
	
	<select id="selectPlaylist" resultType="com.music.domain.PlaylistVO">
		select * from view_playlist where plbno = #{plbno} order by pdbno asc
	</select>
	
	<select id="selectOnePlaylist" resultType="com.music.domain.ViewPlaylistDetailVO">
		select * from view_playlist_detail where plbno = #{plbno} order by pdbno asc
	</select>
	
	<select id="selectPlaylistwithId" resultType="com.music.domain.PlaylistVO">
		select * from view_playlist where id = #{id}
	</select>
	
	<select id="readPlaylistsWithId" resultType="com.music.domain.PlaylistVO">
		select pl.name as name, pl.id as id, pl.plbno as plbno, count(pd.pdbno) as pdbno  
    from playlist_detail_m pd, playlist_m pl
    where pl.plbno = pd.plbno(+) 
		group by pl.name, pl.id, pl.plbno
		having id = #{id}
	</select>
	
	<select id="selectBasicPlaylistPrimaryKey" resultType="int">
		select plbno from playlist_m where name = 'basic_playlist' and id = #{id}
	</select>
	
	<select id="countTrack" resultType="int">
		select count(pd.pdbno) as pdbno  
    from playlist_detail_m pd, playlist_m pl
    where pl.plbno = pd.plbno
		group by pl.plbno
		having pl.plbno = #{plbno}
	</select>
	
	<select id="countPlaylist" resultType="int">
		select count(*) from playlist_m where id = #{id}
	</select>
	
	<select id="maxPlbno" resultType="int">
		select max(plbno) from playlist_m where id = #{id}
	</select>
	
	<select id="minPlbno" resultType="int">
		select min(plbno) from playlist_m where id = #{id}
	</select>
	
	<insert id="insertBasicPlaylist">
		<selectKey keyProperty="plbno" resultType="int" order="BEFORE">
			select playlist_m_seq.nextval from dual
		</selectKey>
		
		insert into playlist_m (plbno, id, name) values (#{plbno}, #{id}, 'basic_playlist')
	</insert>
	
	<insert id="insertPlaylist">
		<selectKey keyProperty="plbno" order="BEFORE" resultType="int">
			select playlist_m_seq.nextval from dual
		</selectKey>
		
		insert into playlist_m (plbno, id, name) values (#{plbno}, #{id}, #{name})
	</insert>
	
	<insert id="insertPlaylistDetail">
		<selectKey keyProperty="pdbno" order="BEFORE" resultType="int">
			select playlist_detail_m_seq.nextval from dual
		</selectKey>
		
		insert into playlist_detail_m (pdbno, abno, tbno, plbno) values (#{pdbno}, #{abno} ,#{tbno}, #{plbno})
	</insert>
	
	<select id="selectPlaylistImage" resultType="com.music.domain.ViewPlaylistDetailVO">
		select pl.plbno, pd.image_240 
		from playlist_m pl , view_playlist_detail pd
		where pl.plbno = pd.plbno 
		and pl.plbno = #{plbno} and rownum = 1 
		order by pd.pdbno
	</select>
	
	<select id="selectMaxPdbno" resultType="int">
		select max(pdbno) from playlist_detail_m where plbno=#{plbno} and tbno=#{tbno}
	</select>
	
	<delete id="deletePlaylistDetail">
		delete from playlist_detail_m where pdbno=#{pdbno}
	</delete>
	
	<delete id="clearQue">
		delete from playlist_detail_m where plbno=#{plbno}
	</delete>

	<update id="modifyPlaylist">
		update playlist_m set name = #{name} where plbno = #{plbno} and id = #{id}
	</update>
	
	<select id="myPlaylistView" resultType="com.music.domain.ViewPlaylistDetailVO">
		select pl.plbno, count(pd.pdbno) as count, sum(pd.duration) as duration, (LPAD ((TRUNC ( sum(pd.duration) / 60)), 2, '0')
        || ':'
        || LPAD ((MOD (sum(pd.duration), 60)), 2, '0')) as length 
		from view_playlist pl , view_playlist_detail pd
		where pl.plbno = pd.plbno 
		group by pl.plbno
		having pl.plbno = 2
	
	</select>
</mapper>